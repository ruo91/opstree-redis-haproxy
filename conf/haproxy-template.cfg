# Global settings
global
    pidfile /run/haproxy.pid
    user haproxy
    group haproxy
    # turn on stats unix socket
    stats socket /run/haproxy.sock level admin expose-fd listeners

    #### Max Connection ####
    # If this value is not set, it will automatically be calculated based on the current file
    # descriptors limit reported by the "ulimit -n" command, possibly reduced to a lower value if a memory limit is enforced,
    # based on the buffer size, memory allocated to compression, SSL cache size, and use or not of SSL and the associated maxsslconn (which can also be automatic).
    maxconn 500000

    ### CPU Pinning ####
    # https://www.haproxy.com/blog/multithreading-in-haproxy/
    # Multi-thread mode
    nbthread 4

    # Multi-process mode
    #cpu-map 1 0
    #cpu-map 2 1
    #cpu-map 3 2
    #cpu-map 4 3

    #### Tuning ####
    # Status
    stats timeout 2m

    # Buffer Size
    tune.maxrewrite 32768
    tune.bufsize 65536
    tune.maxaccept 10000
    tune.recv_enough 8192
    tune.sndbuf.client 131072
    tune.sndbuf.server 131072
    tune.idletimer 60s

    # Enable Zero Copy Forward
    # https://docs.haproxy.org/dev/configuration.html#tune.pt.zero-copy-forwarding
    tune.pt.zero-copy-forwarding on

# Defaults
defaults
    mode tcp
    log global
    option dontlognull
    option log-health-checks
    option redispatch
    option nolinger
    option tcpka
    retries 3
    timeout queue 0
    timeout connect 0
    timeout client 0
    timeout server 0

#### HAProxy Status ####
listen stats
    #bind {{ MULTUS_IP }}:1936
    bind *:1936
    mode http
    stats enable
    stats refresh 1s
    # Health check monitoring uri.
    monitor-uri /healthz

    # Add your custom health check monitoring failure condition here.
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /

#### Redis Replication Cluster-0 (Master) ####
frontend frontend-redis-master-replication-cluster-0
    #bind {{ MULTUS_IP }}:6379
    bind *:6379
    default_backend backend-redis-master-replication-cluster-0
    mode tcp
    #option tcplog

backend backend-redis-master-replication-cluster-0
    # TCP Mode
    mode tcp

    # LoadBalancing Type
    balance source
    hash-type consistent

    # Options
    option tcp-check
    #tcp-check send AUTH redis-password\r\n
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK

    # Redis Replication Pods (floating IP with Multus IPVLAN)
    server redis-master-replication-pod-00 172.16.1.11:6379 check inter 2s rise 1 fall 2 maxconn 500000
    server redis-master-replication-pod-01 172.16.1.12:6379 check inter 2s rise 1 fall 2 maxconn 500000
    server redis-master-replication-pod-02 172.16.1.13:6379 check inter 2s rise 1 fall 2 maxconn 500000
